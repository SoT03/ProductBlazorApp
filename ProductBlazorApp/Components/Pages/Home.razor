@page "/"
@using ProductBlazorApp.Data
@using ProductBlazorApp.Models
@inject NavigationManager NavigationManager
@inject ProductService ProductService
@rendermode InteractiveServer


<PageTitle>Home</PageTitle>

<h3>Product List</h3>



@if (products == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (products != null && products.Count > 0)
            {
                @foreach (var product in products)
                {
                    <tr>
                        <td>@product.Id</td>
                        <td>@product.Name</td>
                        <td>@product.Price</td>
                        <td>@product.Description</td>
                        <td>
                            <button class="btn btn-warning" @onclick="() => EditProduct(product.Id)">Edit</button>
                            <button class="btn btn-danger"  @onclick="() => DeleteProduct(product.Id)">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No items found.</td>
                </tr>
            }
        </tbody>
    </table>
}

<a href="/edit" class="btn btn-primary">Add new</a>

@code {
    private List<Product>? products;



    protected override async Task OnInitializedAsync()
    {

        products = await ProductService.GetProducts();
    }

    private void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/edit/{id}");
    }

    private async  void DeleteProduct(int id)
    {
        await ProductService.DeleteProductAsync(id);
        NavigationManager.Refresh(true);
    }


}